%!PS-Adobe-
%%DocumentFonts: Courier Courier-Bold
% PSP prologue file, version 1.0
%
% Copyright (c) 1989 Eric J. Kostelich
%
save
/PSPstart {} def
/p {	3 1 roll
	Linespacing mul Textoffset exch sub
	exch Textwidth Leftmargin add mul Leftmargin add
	exch moveto show 
} def

/Setbold { /Courier-Bold findfont Boldsize scalefont setfont } def
/SF { /Courier findfont Pointsize scalefont setfont } def
%
% (string) H  - for placing boldface titles
%
/H { Setbold Leftmargin Titleoffset moveto show SF } def
%
%  Normal mode - use titles, 54 lines/page
%
/Usual {/Leftmargin 66 def  /Textoffset 708 def /Titleoffset 738 def
	/Boldsize 12 def  /Pointsize 10 def /Linespacing 12 def
	/Textwidth 480 def /Rotatemode false def
} def
%
%  Plain mode - no titles, 66 lines/page
%
/Plain {/Leftmargin 72 def  /Textoffset 756 def
	/Boldsize 14 def  /Pointsize 9 def /Linespacing 11 def
	/Textwidth 480 def /Rotatemode false def
} def
%
% Rotated, two-column mode - 65 lines/column
%
/Rotated { /Rotatemode true def } def
/Rotatepage { 612 0 translate 90 rotate
	/Leftmargin 36 def /Textoffset 550 def /Titleoffset 568 def
	/Boldsize 12 def  /Pointsize 7 def  /Linespacing 8 def
	/Textwidth 336 def
} def
/Startpage { Rotatemode {Rotatepage} if SF } def
/Endpage {showpage} def
/PSPend {restore} def
%%EndPrologue
Rotated
%%Page 1 1
Startpage
(ImplementRbac0WInSymKey.java                                      Wed Apr 27 13:25:44 2016
       1)H
0 0(package ibe;)p
0 2(import base.Action;)p
0 3(import base.Implementation;)p
0 4(import base.SimLogger.Log;)p
0 5(import base.Simulation;)p
0 6(import base.State;)p
0 7(import base.WorkloadState;)p
0 9(public class ImplementRbac0WInSymKey extends Implementation {)p
0 11(    static final String TRUE = SymKey.TRUE;)p
0 12(    static final String FALSE = SymKey.FALSE;)p
0 14(    public static String schemeName\(\) {)p
0 15(        return "Model 4";)p
0 16(    })p
0 18(    @Override)p
0 19(    public void init\(WorkloadState wState\) {)p
0 20(        if\(!\(wState instanceof Rbac0WState\)\) {)p
0 21(            throw new RuntimeException\("Workload state of incorrect type: " + wS)p
0 22(tate.getClass\(\).getName\(\)\);)p
0 23(        })p
0 24(        wScheme = new Rbac0W\(wState\);)p
0 25(        // Set workload's system as well so it can insert and remove actors)p
0 26(        wScheme.sys = sys;)p
0 27(        scheme = new SymKey\(stateMap\(wState\)\);)p
0 28(    })p
0 30(    @Override)p
0 31(    public State stateMap\(WorkloadState wState\) {)p
0 32(        if\(!\(wState instanceof Rbac0WState\)\) {)p
0 33(            throw new RuntimeException\("Workload state of incorrect type: " + wS)p
0 34(tate.getClass\(\).getName\(\)\);)p
0 35(        })p
0 37(        Rbac0WState rState = \(Rbac0WState\) wState;)p
0 38(        SymKeyState pState = new SymKeyState\(\);)p
0 40(        for\(String u : rState.U\) {)p
0 41(            Log.v\("Mapping user " + u + " to initial SymKey state"\);)p
0 42(            pState.addUser\(u\);)p
0 43(        })p
0 45(        for\(String r : rState.R\) {)p
0 46(            Log.v\("Mapping role " + r + " to initial SymKey state"\);)p
0 47(            pState.addRole\(r\);)p
0 48(        })p
0 50(        for\(String p : rState.P\) {)p
0 51(            Log.v\("Mapping file " + p + " to initial SymKey state"\);)p
0 52(            pState.addFile\(p\);)p
0 53(        })p
0 55(        for\(String u : rState.UA.keySet\(\)\) {)p
0 56(            for\(String r : rState.UA.get\(u\)\) {)p
0 57(                Log.v\("Giving key " + r + " to user " + u + " in initial SymKey)p
0 58(state"\);)p
0 59(                pState.assignUser\(u, r\);)p
0 60(            })p
0 61(        })p
0 63(        for\(String p : rState.PA.keySet\(\)\) {)p
0 64(            for\(String r : rState.PA.get\(p\)\) {)p
1 0(                // TODO this assumes only read permission)p
1 1(                String op = "r";)p
1 2(                boolean read = \(op.equals\("r"\) || op.equals\("rw"\)\);)p
1 3(                boolean write = \(op.equals\("w"\) || op.equals\("rw"\)\);)p
1 5(                Log.v\("Assigning " + p + " to role " + r + " in initial SymKey s)p
1 6(tate"\);)p
1 7(                pState.assignPermission\(p, r, read, write\);)p
1 8(            })p
1 9(        })p
1 11(        return pState;)p
1 12(    })p
1 14(    @Override)p
1 15(    public void action\(Action a\) {)p
1 16(        SymKey symkey = \(SymKey\) scheme;)p
1 17(        SymKeyState pState = \(SymKeyState\) symkey.state;)p
1 18(        super.action\(a\);)p
1 20(        Log.d\("Converting action " + a\);)p
1 22(        String actor = a.params[0];)p
1 24(        switch\(a.name\) {)p
1 25(            case "addU": {)p
1 26(                String u = a.params[1];)p
1 27(                symkey.action\(new Action\("addUser", new String[] {actor, u}\)\);)p
1 28(                break;)p
1 29(            })p
1 30(            case "delU": {)p
1 31(                String u = a.params[1];)p
1 32(                symkey.action\(new Action\("deleteUser", new String[] {actor, u}\)\))p
1 33(;)p
1 34(                break;)p
1 35(            })p
1 36(            case "addR": {)p
1 37(                String r = a.params[1];)p
1 38(                symkey.action\(new Action\("addRole", new String[] {actor, r}\)\);)p
1 39(                break;)p
1 40(            })p
1 41(            case "delR": {)p
1 42(                String r = a.params[1];)p
1 43(                symkey.action\(new Action\("deleteRole", new String[] {actor, r}\)\))p
1 44(;)p
1 45(                break;)p
1 46(            })p
1 47(            case "addP": {)p
1 48(                String f = a.params[1];)p
1 49(                symkey.action\(new Action\("addFile", new String[] {actor, f}\)\);)p
1 50(                break;)p
1 51(            })p
1 52(            case "delP": {)p
1 53(                String f = a.params[1];)p
1 54(                symkey.action\(new Action\("deleteFile", new String[] {actor, f}\)\))p
1 55(;)p
1 56(                break;)p
1 57(            })p
1 58(            case "assignUser": {)p
1 59(                String u = a.params[1];)p
1 60(                String r = a.params[2];)p
1 61(                symkey.action\(new Action\("assignUser", new String[] {actor, u, r)p
1 62(}\)\);)p
1 63(                break;)p
1 64(            })p
Endpage
%%Page 3 2
Startpage
(ImplementRbac0WInSymKey.java                                      Wed Apr 27 13:25:44 2016
       2)H
0 0(            case "revokeUser": {)p
0 1(                String u = a.params[1];)p
0 2(                String r = a.params[2];)p
0 3(                symkey.action\(new Action\("revokeUser", new String[] {actor, u, r)p
0 4(}\)\);)p
0 5(                break;)p
0 6(            })p
0 7(            case "assignPermission": {)p
0 8(                String f = a.params[1];)p
0 9(                String r = a.params[2];)p
0 10(                // TODO for the time being, this always assigns read)p
0 11(                String op = "r";)p
0 13(                boolean read = \(op.equals\("r"\) || op.equals\("rw"\)\);)p
0 14(                boolean write = \(op.equals\("w"\) || op.equals\("rw"\)\);)p
0 15(                String sRead = read ? TRUE : FALSE;)p
0 16(                String sWrite = write ? TRUE : FALSE;)p
0 18(                symkey.action\(new Action\("assignPermission", new String[] {actor)p
0 19(, f, r, sRead, sWrite}\)\);)p
0 20(                break;)p
0 21(            })p
0 22(            case "revokePermission": {)p
0 23(                String f = a.params[1];)p
0 24(                String r = a.params[2];)p
0 25(                // TODO for the time being, this always revokes both read, write)p
0 26(                String op = "rw";)p
0 28(                boolean read = \(op.equals\("r"\) || op.equals\("rw"\)\);)p
0 29(                boolean write = \(op.equals\("w"\) || op.equals\("rw"\)\);)p
0 30(                String sRead = read ? TRUE : FALSE;)p
0 31(                String sWrite = write ? TRUE : FALSE;)p
0 33(                symkey.action\(new Action\("revokePermission", new String[] {actor)p
0 34(, f, r, sRead, sWrite}\)\);)p
0 35(                break;)p
0 36(            })p
0 37(            case "auth": {)p
0 38(                String u = a.params[1];)p
0 39(                String f = a.params[2];)p
0 40(                // TODO for the time being, this assumes 50% r, 50% rw)p
0 41(                String op = "r";)p
0 42(                if\(Simulation.rand.nextDouble\(\) > 0.5\) op = "rw";)p
0 44(                boolean read = \(op.equals\("r"\) || op.equals\("rw"\)\);)p
0 45(                boolean write = \(op.equals\("w"\) || op.equals\("rw"\)\);)p
0 47(                if\(write\) {)p
0 48(                    symkey.action\(new Action\(true, "write", new String[] {actor,)p
0 49( u, f}\)\);)p
0 50(                } else if\(read\) {)p
0 51(                    symkey.action\(new Action\(true, "read", new String[] {actor,)p
0 52(u, f}\)\);)p
0 53(                })p
0 55(                break;)p
0 56(            })p
0 57(            default:)p
0 58(                throw new RuntimeException\("Asked to convert unsupported action)p
0 59(" + a\);)p
0 60(        })p
0 61(    })p
0 63(})p
Endpage
%%Trailer
PSPend
